/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FramePrincipal.java
 *
 * Created on 4/01/2012, 10:06:36 AM
 */
package frame;

import clases.ClaseBaseDatos;
import clases.ClaseGeneral;
import clases.ClaseImportar;
import clases.ClaseInformacion;
import clases.ClaseInformes;
import clases.ClaseMensaje;
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.File;
import java.net.URI;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import neuranas.ThreadAutomatico;

/**
 *
 * @author Jhon Lopez
 */
public class FramePrincipal extends javax.swing.JFrame implements Printable {

    /**
     * AL AGREGAR UN IFRAME NUEVOS SE DEBE INCLUIR TAMBIEN EN Limpiar() y en
     * ClaseInfomacion LimpiarPrincipales o LimpiarSecundarios*
     */

    private IFrameAnexoscontratos anexoscontratos;
    private IFrameAnexosterceros anexosterceros;
    private IFrameBienessolicitudesoferta bienessolicitudesoferta;
    private IFrameComprobantes comprobantes;
    private IFrameComprobantesnoreembolsados comprobantesnoreembolsados;
    private IFrameComprobantespendientes comprobantespendientes;
    private IFrameContratos contratos;
    private IFrameCubs cubs;
    private IFrameCuentas cuentas;
    private IFrameCumplidoscomprobantes cumplidoscomprobantes;
    private IFrameFacturascomprobantes facturascomprobantes;
    private IFrameFormadepagocontratos formadepagocontratos;
    private IFrameFormadepagosolicitudesoferta formadepagosolicitudesoferta;
    private IFrameModificaciones modificaciones;
    private IFrameObservacionescontratos observacionescontratos;
    private IFrameObservacionescuentas observacionescuentas;
    private IFramePlanestrategicocontratos planestrategicocontratos;
    private IFramePolizas polizas;
    private IFrameReportes reportes;
    private IFrameResoluciones resoluciones;
    private IFrameServiciossolicitudesoferta serviciossolicitudesoferta;
    private IFrameSolicitudesoferta solicitudesoferta;
    private IFrameSoportescomprobantes soportescomprobantes;
    private IFrameSoportescontratos soportescontratos;
    private IFrameSoportescuentas soportescuentas;
    private IFrameTerceros terceros;
    private IFrameTercerosresoluciones tercerosresoluciones;
    public static ExternoPanelEntrega panelEntrega;
    private ClaseImportar importar;
    private ClaseInformes informes = new ClaseInformes();
    private ThreadAutomatico hiloAutomatico;
    private FileNameExtensionFilter filter = new FileNameExtensionFilter("csv", "CSV");
    final Object objeto = new Object();
    private ClaseInformacion informacion = new ClaseInformacion();
    private FrameCarga frameCarga = new FrameCarga();
    private Thread hilo1 = new ThreadCarga();
    private Thread hilo2 = new ThreadCargaEntregapdf();
    public boolean isCargado = false;

    /**
     * Creates new form FramePrincipal
     */
    @SuppressWarnings("CallToThreadStartDuringObjectConstruction")
    public FramePrincipal() {
        ClaseBaseDatos.conectar();

        hilo1 = new ThreadCarga();
        hilo1.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser = new javax.swing.JFileChooser();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        scrollListaContratos = new javax.swing.JScrollPane();
        listaContratos = new javax.swing.JList();
        scrollListaCuentas = new javax.swing.JScrollPane();
        listaCuentas = new javax.swing.JList();
        scrollListaCalificaciontramites = new javax.swing.JScrollPane();
        listaCalificaciontramites = new javax.swing.JList();
        scrollListaContratosSECOP = new javax.swing.JScrollPane();
        listaContratosSECOP = new javax.swing.JList();
        jDesktopPane = new javax.swing.JDesktopPane();
        labelImagen = new javax.swing.JLabel();
        jPanel = new javax.swing.JPanel();
        jPanelPrimero = new javax.swing.JPanel();
        jScrollPane = new javax.swing.JScrollPane();
        jTree = new javax.swing.JTree();
        jPanelSur = new javax.swing.JPanel();
        labelEntidad = new javax.swing.JLabel();
        botonPantallazo = new javax.swing.JButton();

        jFileChooser.setCurrentDirectory(new java.io.File("C:\\Program Files\\NetBeans 8.1"));
        jFileChooser.setFileFilter(filter);

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        scrollListaContratos.setMaximumSize(new java.awt.Dimension(195, 150));
        scrollListaContratos.setMinimumSize(new java.awt.Dimension(195, 150));
        scrollListaContratos.setPreferredSize(new java.awt.Dimension(195, 150));

        listaContratos.setSelectionBackground(ClaseGeneral.campo);
        listaContratos.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaContratosValueChanged(evt);
            }
        });
        scrollListaContratos.setViewportView(listaContratos);

        jTabbedPane1.addTab("CONTRATOS", scrollListaContratos);

        scrollListaCuentas.setMaximumSize(new java.awt.Dimension(195, 150));
        scrollListaCuentas.setMinimumSize(new java.awt.Dimension(195, 150));
        scrollListaCuentas.setPreferredSize(new java.awt.Dimension(195, 150));

        listaCuentas.setSelectionBackground(ClaseGeneral.campo);
        listaCuentas.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaCuentasValueChanged(evt);
            }
        });
        scrollListaCuentas.setViewportView(listaCuentas);

        jTabbedPane1.addTab("CUENTAS", scrollListaCuentas);

        scrollListaCalificaciontramites.setMaximumSize(new java.awt.Dimension(195, 150));
        scrollListaCalificaciontramites.setMinimumSize(new java.awt.Dimension(195, 150));
        scrollListaCalificaciontramites.setPreferredSize(new java.awt.Dimension(195, 150));

        listaCalificaciontramites.setSelectionBackground(ClaseGeneral.campo);
        listaCalificaciontramites.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaCalificaciontramitesValueChanged(evt);
            }
        });
        scrollListaCalificaciontramites.setViewportView(listaCalificaciontramites);

        jTabbedPane1.addTab("CALIFICACIÓN", scrollListaCalificaciontramites);

        scrollListaContratosSECOP.setMaximumSize(new java.awt.Dimension(195, 150));
        scrollListaContratosSECOP.setMinimumSize(new java.awt.Dimension(195, 150));
        scrollListaContratosSECOP.setPreferredSize(new java.awt.Dimension(195, 150));

        listaContratosSECOP.setSelectionBackground(ClaseGeneral.campo);
        listaContratosSECOP.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaContratosSECOPValueChanged(evt);
            }
        });
        scrollListaContratosSECOP.setViewportView(listaContratosSECOP);

        jTabbedPane1.addTab("SECOP", scrollListaContratosSECOP);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("AGA - Aplicación de Gestión Administrativa");

        jDesktopPane.setBackground(ClaseGeneral.campo);
        jDesktopPane.setMaximumSize(new java.awt.Dimension(840, 710));
        jDesktopPane.setMinimumSize(new java.awt.Dimension(840, 710));

        labelImagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("imagenes/Fondo.png")));
        labelImagen.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        labelImagen.setFocusable(false);
        jDesktopPane.add(labelImagen);
        labelImagen.setBounds(0, 0, 840, 710);

        anexoscontratos.setResizable(false);
        anexosterceros.setResizable(false);
        bienessolicitudesoferta.setResizable(false);
        comprobantes.setResizable(false);
        comprobantesnoreembolsados.setResizable(false);
        comprobantespendientes.setResizable(false);
        contratos.setResizable(false);
        cubs.setResizable(false);
        cuentas.setResizable(false);
        cumplidoscomprobantes.setResizable(false);
        facturascomprobantes.setResizable(false);
        formadepagocontratos.setResizable(false);
        formadepagosolicitudesoferta.setResizable(false);
        modificaciones.setResizable(false);
        observacionescontratos.setResizable(false);
        observacionescuentas.setResizable(false);
        planestrategicocontratos.setResizable(false);
        polizas.setResizable(false);
        resoluciones.setResizable(false);
        serviciossolicitudesoferta.setResizable(false);
        solicitudesoferta.setResizable(false);
        soportescomprobantes.setResizable(false);
        soportescontratos.setResizable(false);
        soportescuentas.setResizable(false);
        terceros.setResizable(false);
        tercerosresoluciones.setResizable(false);
        reportes.setResizable(false);

        jDesktopPane.add(anexoscontratos, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane.add(anexosterceros, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane.add(bienessolicitudesoferta, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane.add(comprobantes, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane.add(comprobantesnoreembolsados, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane.add(comprobantespendientes, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane.add(contratos, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane.add(cubs, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane.add(cuentas, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane.add(cumplidoscomprobantes, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane.add(facturascomprobantes, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane.add(formadepagocontratos, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane.add(formadepagosolicitudesoferta, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane.add(modificaciones, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane.add(observacionescontratos, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane.add(observacionescuentas, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane.add(planestrategicocontratos, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane.add(polizas, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane.add(reportes, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane.add(resoluciones, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane.add(serviciossolicitudesoferta, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane.add(solicitudesoferta, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane.add(soportescomprobantes, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane.add(soportescontratos, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane.add(soportescuentas, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane.add(terceros, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane.add(tercerosresoluciones, javax.swing.JLayeredPane.DEFAULT_LAYER);
        getContentPane().add(jDesktopPane, java.awt.BorderLayout.CENTER);

        jPanel.setMaximumSize(new java.awt.Dimension(205, 785));
        jPanel.setMinimumSize(new java.awt.Dimension(205, 785));
        jPanel.setPreferredSize(new java.awt.Dimension(195, 710));
        jPanel.setLayout(new java.awt.BorderLayout());

        jPanelPrimero.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanelPrimero.setPreferredSize(new java.awt.Dimension(195, 27));
        jPanelPrimero.setLayout(new java.awt.BorderLayout());
        jPanel.add(jPanelPrimero, java.awt.BorderLayout.PAGE_START);
        jPanelSur.setVisible(false);

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("AGA");
        javax.swing.tree.DefaultMutableTreeNode treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Orden Contractual");
        javax.swing.tree.DefaultMutableTreeNode treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Anexos");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Contratos *");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("CUBS");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Forma de Pago");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Modificaciones");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Observaciones");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Plan Estrategico");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Pólizas");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Soportes");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Beneficiarios");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Anexos");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Terceros *");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Pagos Facultad");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Comprobantes *");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Cumplidos");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Facturas");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Soportes");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Resoluciones");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Articulos");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Resolucion *");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Gastos Facultad");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Cuentas *");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Observaciones");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Soportes");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Coordinacion");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Entrega ppto (pdf)");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Informes");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Web");
        javax.swing.tree.DefaultMutableTreeNode treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Doc. Terceros");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Consul. Pagos");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("C.Info - C.Interna");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Aprob. Pagos");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Orden Contractual *");
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Devoluciones");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Formato F20");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("SECOP");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Pagos Facultad *");
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("No Reembolsados");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Pend. Pago");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Gastos Facultad *");
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Devoluciones");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Importar");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Pend. Calificacion");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        jTree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jTree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTreeMouseClicked(evt);
            }
        });
        jScrollPane.setViewportView(jTree);

        jPanel.add(jScrollPane, java.awt.BorderLayout.CENTER);

        jPanelSur.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanelSur.setPreferredSize(new java.awt.Dimension(195, 55));
        jPanelSur.setLayout(new java.awt.BorderLayout());

        labelEntidad.setBackground(ClaseGeneral.boton);
        labelEntidad.setFont(new java.awt.Font("Tahoma", 1, 17)); // NOI18N
        labelEntidad.setForeground(ClaseGeneral.rojo);
        labelEntidad.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelEntidad.setText("<html><p>- : <br/> - </p></html>");
        labelEntidad.setOpaque(true);
        labelEntidad.setPreferredSize(new java.awt.Dimension(195, 55));
        labelEntidad.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        labelEntidad.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelEntidadMouseClicked(evt);
            }
        });
        jPanelSur.add(labelEntidad, java.awt.BorderLayout.NORTH);

        jPanel.add(jPanelSur, java.awt.BorderLayout.SOUTH);
        jPanelSur.setVisible(false);

        botonPantallazo.setBackground(ClaseGeneral.boton);
        botonPantallazo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botonPantallazo.setText("- Pantallazo -");
        botonPantallazo.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        botonPantallazo.setContentAreaFilled(false);
        botonPantallazo.setOpaque(true);
        botonPantallazo.setPreferredSize(new java.awt.Dimension(195, 25));
        botonPantallazo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonPantallazoActionPerformed(evt);
            }
        });
        jPanel.add(botonPantallazo, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(jPanel, java.awt.BorderLayout.LINE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTreeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTreeMouseClicked
        try {
            metodoLimpiar();

//            System.out.println(jDesktopPane.getWidth());
//            System.out.println(jDesktopPane.getHeight());
//            System.out.println(jPanel.getWidth());
//            System.out.println(jPanel.getHeight());
            String padre = "" + jTree.getSelectionPath().getPathComponent(1);
            String padreDos = "" + jTree.getSelectionPath().getPathComponent(2);
            String hijo = "" + jTree.getSelectionPath().getLastPathComponent();
//            System.err.println(padre);
//            System.err.println("*" + padreDos);
//            System.err.println("+++" + hijo);

            metodoEntidadSeleccionada(padre, hijo);

            if (padre.equals("Solicitud de Oferta")) {
                /*
                
Solicitud de Oferta
>  Bienes
>  Forma de Pago
>  Servicios        
>  Solicitudes *
                
                */
//                if (hijo.equals("Solicitudes *")) {
//                    solicitudesoferta.setBounds(0, 0, jDesktopPane.getWidth(), jDesktopPane.getHeight());
//                    solicitudesoferta.setVisible(true);
//                    solicitudesoferta.metodoEstado("reiniciar");
//                    solicitudesoferta.metodoLimpiar();
//                }
//                else if (hijo.equals("Bienes")
//                        && !ClaseGeneral.solicitudesoferta.getId().equals("")
//                        && !ClaseGeneral.solicitudesoferta.getObjeto().contains("[ANULADO]")) {
//                    bienessolicitudesoferta.setBounds(0, 0, jDesktopPane.getWidth(), jDesktopPane.getHeight());
//                    bienessolicitudesoferta.setVisible(true);
//                    bienessolicitudesoferta.metodoEstado("reiniciar");
//                    bienessolicitudesoferta.metodoLimpiar();
//                }else if(hijo.equals("Forma de Pago")
//                        && !ClaseGeneral.solicitudesoferta.getId().equals("")
//                        && !ClaseGeneral.solicitudesoferta.getObjeto().contains("[ANULADO]")){
//                    formadepagosolicitudesoferta.setBounds(0, 0, jDesktopPane.getWidth(), jDesktopPane.getHeight());
//                    formadepagosolicitudesoferta.setVisible(true);
//                    formadepagosolicitudesoferta.metodoEstado("reiniciar");
//                    formadepagosolicitudesoferta.metodoLimpiar();
//                }else if(hijo.equals("Servicios")
//                        && !ClaseGeneral.solicitudesoferta.getId().equals("")
//                        && !ClaseGeneral.solicitudesoferta.getObjeto().contains("[ANULADO]")){
//                    serviciossolicitudesoferta.setBounds(0, 0, jDesktopPane.getWidth(), jDesktopPane.getHeight());
//                    serviciossolicitudesoferta.setVisible(true);
//                    serviciossolicitudesoferta.metodoEstado("reiniciar");
//                    serviciossolicitudesoferta.metodoLimpiar();
//                }
            } else if (padre.equals("Orden Contractual")) {
                if (hijo.equals("Anexos")
                        && !ClaseGeneral.contratos.getContrato().equals("")) {
                    anexoscontratos.setBounds(0, 0, jDesktopPane.getWidth(), jDesktopPane.getHeight());
                    anexoscontratos.setVisible(true);
                    anexoscontratos.metodoEstado("reiniciar");
                    anexoscontratos.metodoLimpiar();
                } else if (hijo.equals("Contratos *")) {
                    contratos.setBounds(0, 0, jDesktopPane.getWidth(), jDesktopPane.getHeight());
                    contratos.setVisible(true);
                    contratos.metodoEstado("reiniciar");
                    contratos.metodoLimpiar();
                } else if (hijo.equals("CUBS")
                        && !ClaseGeneral.contratos.getContrato().equals("")) {
                    cubs.setBounds(0, 0, jDesktopPane.getWidth(), jDesktopPane.getHeight());
                    cubs.setVisible(true);
                    cubs.metodoEstado("reiniciar");
                    cubs.metodoLimpiar();
                } else if (hijo.equals("Forma de Pago")
                        && !ClaseGeneral.contratos.getContrato().equals("")) {
                    formadepagocontratos.setBounds(0, 0, jDesktopPane.getWidth(), jDesktopPane.getHeight());
                    formadepagocontratos.setVisible(true);
                    formadepagocontratos.metodoEstado("reiniciar");
                    formadepagocontratos.metodoLimpiar();
                } else if (hijo.equals("Modificaciones")
                        && !ClaseGeneral.contratos.getContrato().equals("")) {
                    modificaciones.setBounds(0, 0, jDesktopPane.getWidth(), jDesktopPane.getHeight());
                    modificaciones.setVisible(true);
                    modificaciones.metodoEstado("reiniciar");
                    modificaciones.metodoLimpiar();
                } else if (hijo.equals("Observaciones")
                        && !ClaseGeneral.contratos.getContrato().equals("")) {
                    observacionescontratos.setBounds(0, 0, jDesktopPane.getWidth(), jDesktopPane.getHeight());
                    observacionescontratos.setVisible(true);
                    observacionescontratos.metodoEstado("reiniciar");
                    observacionescontratos.metodoLimpiar();
                } else if (hijo.equals("Plan Estrategico")
                        && !ClaseGeneral.contratos.getContrato().equals("")) {
                    planestrategicocontratos.setBounds(0, 0, jDesktopPane.getWidth(), jDesktopPane.getHeight());
                    planestrategicocontratos.setVisible(true);
                    planestrategicocontratos.metodoEstado("reiniciar");
                    planestrategicocontratos.metodoLimpiar();
                } else if (hijo.equals("Pólizas")
                        && !ClaseGeneral.contratos.getContrato().equals("")) {
                    polizas.setBounds(0, 0, jDesktopPane.getWidth(), jDesktopPane.getHeight());
                    polizas.setVisible(true);
                    polizas.metodoEstado("reiniciar");
                    polizas.metodoLimpiar();
                } else if (hijo.equals("Soportes")
                        && !ClaseGeneral.contratos.getContrato().equals("")) {
                    soportescontratos.setBounds(0, 0, jDesktopPane.getWidth(), jDesktopPane.getHeight());
                    soportescontratos.setVisible(true);
                    soportescontratos.metodoEstado("reiniciar");
                    soportescontratos.metodoLimpiar();
                }
            } else if (padre.equals("Beneficiarios")) {
                if (hijo.equals("Anexos")
                        && !ClaseGeneral.terceros.getId().equals("")) {
                    anexosterceros.setBounds(0, 0, jDesktopPane.getWidth(), jDesktopPane.getHeight());
                    anexosterceros.setVisible(true);
                    anexosterceros.metodoEstado("reiniciar");
                    anexosterceros.metodoLimpiar();
//                } else if (hijo.equals("Documentos")
//                        && !ClaseGeneral.terceros.getId().equals("")) {
//                    documentosterceros.setBounds(0, 0, jDesktopPane.getWidth(), jDesktopPane.getHeight());
//                    documentosterceros.setVisible(true);
//                    documentosterceros.loadURL(ClaseGeneral.servidor + "/Formularios/ResultadosGET.php?fktercero=" + ClaseGeneral.terceros.getId() + "&persona=" + ClaseGeneral.terceros.getRegimen());
                } else if (hijo.equals("Terceros *")) {
                    terceros.setBounds(0, 0, jDesktopPane.getWidth(), jDesktopPane.getHeight());
                    terceros.setVisible(true);
                    terceros.metodoEstado("reiniciar");
                    terceros.metodoLimpiar();
//                } else if (hijo.equals("Tramites")
//                        && !ClaseGeneral.terceros.getId().equals("")) {
//                    tramitesterceros.setBounds(0, 0, jDesktopPane.getWidth(), jDesktopPane.getHeight());
//                    tramitesterceros.setVisible(true);
//                    tramitesterceros.loadURL(ClaseGeneral.servidor + "/Formularios/ResultadosTramitesGET.php?fktercero=" + ClaseGeneral.terceros.getId());
                }
            } else if (padre.equals("Pagos Facultad")) {
                if (hijo.equals("Comprobantes *")) {
                    comprobantes.setBounds(0, 0, jDesktopPane.getWidth(), jDesktopPane.getHeight());
                    comprobantes.setVisible(true);
                    comprobantes.metodoEstado("reiniciar");
                    comprobantes.metodoLimpiar();
                } else if (hijo.equals("Cumplidos")
                        && ClaseGeneral.comprobantes != null
                        && !ClaseGeneral.comprobantes.getTipopago().equals("Aprobacion")
                        && !ClaseGeneral.comprobantes.getTipopago().equals("Anulado")) {
                    cumplidoscomprobantes.setBounds(0, 0, jDesktopPane.getWidth(), jDesktopPane.getHeight());
                    cumplidoscomprobantes.setVisible(true);
                    cumplidoscomprobantes.metodoEstado("reiniciar");
                    cumplidoscomprobantes.metodoLimpiar();
                } else if (hijo.equals("Facturas")
                        && ClaseGeneral.comprobantes != null
                        && !ClaseGeneral.comprobantes.getTipopago().equals("Aprobacion")
                        && !ClaseGeneral.comprobantes.getTipopago().equals("Anulado")) {
                    facturascomprobantes.setBounds(0, 0, jDesktopPane.getWidth(), jDesktopPane.getHeight());
                    facturascomprobantes.setVisible(true);
                    facturascomprobantes.metodoEstado("reiniciar");
                    facturascomprobantes.metodoLimpiar();
                } else if (hijo.equals("Soportes")
                        && ClaseGeneral.comprobantes != null
                        && !ClaseGeneral.comprobantes.getTipopago().equals("Aprobacion")
                        && !ClaseGeneral.comprobantes.getTipopago().equals("Anulado")) {
                    soportescomprobantes.setBounds(0, 0, jDesktopPane.getWidth(), jDesktopPane.getHeight());
                    soportescomprobantes.setVisible(true);
                    soportescomprobantes.metodoEstado("reiniciar");
                    soportescomprobantes.metodoLimpiar();
                }
            } else if (padre.equals("Resoluciones")) {
                if (hijo.equals("Articulos")
                        && ClaseGeneral.resoluciones.getResolucionPK().getId() > 0
                        && !ClaseGeneral.resoluciones.getObservacion().contains("[ANULADO]")) {
                    tercerosresoluciones.setBounds(0, 0, jDesktopPane.getWidth(), jDesktopPane.getHeight());
                    tercerosresoluciones.setVisible(true);
                    tercerosresoluciones.metodoEstado("reiniciar");
                    tercerosresoluciones.metodoLimpiar();
                } else if (hijo.equals("Resolucion *")) {
                    resoluciones.setBounds(0, 0, jDesktopPane.getWidth(), jDesktopPane.getHeight());
                    resoluciones.setVisible(true);
                    resoluciones.metodoEstado("reiniciar");
                    resoluciones.metodoLimpiar();
                }
            } else if (padre.equals("Gastos Facultad")) {
                if (hijo.equals("Cuentas *")) {
                    cuentas.setBounds(0, 0, jDesktopPane.getWidth(), jDesktopPane.getHeight());
                    cuentas.setVisible(true);
                    cuentas.metodoEstado("reiniciar");
                    cuentas.metodoLimpiar();
                } else if (hijo.equals("Observaciones")
                        && !ClaseGeneral.cuentas.getSoporte().equals("")) {
                    observacionescuentas.setBounds(0, 0, jDesktopPane.getWidth(), jDesktopPane.getHeight());
                    observacionescuentas.setVisible(true);
                    observacionescuentas.metodoEstado("reiniciar");
                    observacionescuentas.metodoLimpiar();
                } else if (hijo.equals("Soportes")
                        && !ClaseGeneral.cuentas.getSoporte().equals("")) {
                    soportescuentas.setBounds(0, 0, jDesktopPane.getWidth(), jDesktopPane.getHeight());
                    soportescuentas.setVisible(true);
                    soportescuentas.metodoEstado("reiniciar");
                    soportescuentas.metodoLimpiar();
                }
            } else if (padre.equals("Coordinacion")) {
                if (hijo.equals("Entrega ppto (pdf)")
                        && ClaseGeneral.perfil.equals("root")) {
                    try {
                        panelEntrega = new ExternoPanelEntrega();
                        int opcion = ClaseMensaje.panel(panelEntrega);
                        if (opcion == JOptionPane.YES_OPTION) {
                            try {
                                frameCarga.setVisible(true);
                                frameCarga.pack();
                                frameCarga.setSize(280, 100);
                                frameCarga.setLocationRelativeTo(null);
                                frameCarga.setResizable(false);
                                hilo2 = new ThreadCargaEntregapdf();
                                hilo2.start();
                            } catch (Exception e) {
                            }
                        }
                    } catch (Exception ex) {
                        Logger.getLogger(PanelAnexoscontratos.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else if (hijo.equals("Informes")
                        && ClaseGeneral.perfil.equals("root")) {
                    try {
                        reportes.setBounds(0, 0, jDesktopPane.getWidth(), jDesktopPane.getHeight());
                        reportes.setVisible(true);
                        reportes.metodoLimpiar();
                        reportes.metodoBuscar();
                    } catch (Exception ex) {
                        Logger.getLogger(PanelAnexoscontratos.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else if (hijo.equals("Doc. Terceros")) {
                    try {
                        Desktop.getDesktop().browse(new URI(ClaseGeneral.servidor + "/AGA/build/classes/web/ConsultarDocumentosTerceros.php"));
                    } catch (Exception ex) {
                        Logger.getLogger(PanelAnexoscontratos.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else if (hijo.equals("Consul. Pagos")) {
                    try {
                        Desktop.getDesktop().browse(new URI(ClaseGeneral.servidor + "/AGA/build/classes/web/ConsultarPagosRealizados.php"));
                    } catch (Exception ex) {
                        Logger.getLogger(PanelAnexoscontratos.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else if (hijo.equals("C.Info - C.Interna")) {
                    try {
                        Desktop.getDesktop().browse(new URI(ClaseGeneral.servidor + "/AGA/build/classes/web/ConsultarVerificacinfocuentainterna.php"));
                    } catch (Exception ex) {
                        Logger.getLogger(PanelAnexoscontratos.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else if (hijo.equals("Aprob. Pagos")
                        && ClaseGeneral.perfil.equals("root")) {
                    try {
                        Desktop.getDesktop().browse(new URI(ClaseGeneral.servidor + "/AGA/build/classes/web/ConsultarAprobacionPagosFacultad.php"));
                    } catch (Exception ex) {
                        Logger.getLogger(PanelAnexoscontratos.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else if (padreDos.equals("Orden Contractual *")
                        && hijo.equals("Devoluciones")
                        && ClaseGeneral.perfil.equals("root")) {
                    try {
                        //TODO
                    } catch (Exception ex) {
                        Logger.getLogger(PanelAnexoscontratos.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else if (padreDos.equals("Orden Contractual *")
                        && hijo.equals("Formato F20")
                        && ClaseGeneral.perfil.equals("root")) {
                    try {
                        ExternoPanelExportar panelExportar = new ExternoPanelExportar();
                        int opcion = ClaseMensaje.panel(panelExportar);
                        if (opcion == JOptionPane.YES_OPTION) {
                            informes.formatoExportar(panelExportar.fechaInicio.getDate(), panelExportar.fechaFin.getDate());
                        }
                    } catch (Exception ex) {
                        Logger.getLogger(PanelAnexoscontratos.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else if (padreDos.equals("Orden Contractual *")
                        && hijo.equals("SECOP")
                        && ClaseGeneral.perfil.equals("root")) {
                    try {
                        //TODO
                    } catch (Exception ex) {
                        Logger.getLogger(PanelAnexoscontratos.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else if (padreDos.equals("Pagos Facultad *")
                        && hijo.equals("No Reembolsados")
                        && ClaseGeneral.perfil.equals("root")) {
                    comprobantesnoreembolsados.setBounds(0, 0, jDesktopPane.getWidth(), jDesktopPane.getHeight());
                    comprobantesnoreembolsados.setVisible(true);
                    comprobantesnoreembolsados.metodoLimpiar();
                    comprobantesnoreembolsados.metodoBuscar();
                } else if (padreDos.equals("Pagos Facultad *")
                        && hijo.equals("Pend. Pago")
                        && ClaseGeneral.perfil.equals("root")) {
                    comprobantespendientes.setBounds(0, 0, jDesktopPane.getWidth(), jDesktopPane.getHeight());
                    comprobantespendientes.setVisible(true);
                    comprobantespendientes.metodoLimpiar();
                    comprobantespendientes.metodoBuscar();
                } else if (padreDos.equals("Gastos Facultad *")
                        && hijo.equals("Devoluciones")
                        && ClaseGeneral.perfil.equals("root")) {
                    try {
                        //TODO
                    } catch (Exception ex) {
                        Logger.getLogger(PanelAnexoscontratos.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else if (padreDos.equals("Gastos Facultad *")
                        && hijo.equals("Importar")
                        && ClaseGeneral.perfil.equals("root")) {

                    ClaseMensaje.informacionImagen(new javax.swing.ImageIcon(getClass().getResource("imagenes/estandar.png")));

                    ClaseMensaje.informacion("<html>"
                            + "<b>IMPORTANTE</b>"
                            + "<ul>"
                            + "<li>Eliminar los encabezados</li>"
                            + "<li>Formatos permitidos de la Fecha de Transaccion<br/> dd/MM/aaaa y/o dd-MM-aaaa.</li>"
                            + "<li>Los valores no deben tener signo de '$' pesos, comas ',' o puntos '.'.</li>"
                            + "<li>Guardar como archivo en formato .csv con las columnas separadas por (;) PUNTO Y COMA.</li>"
                            + "<li>Guardar el archivo desde el Bloc de Notas con CODIFICACIÓN: UTF-8</li>"
                            + "</ul>"
                            + "</html>");

                    ExternoPanelImportar panelImportar = new ExternoPanelImportar();
                    int opcion = ClaseMensaje.panel(panelImportar);

                    if (opcion == JOptionPane.YES_OPTION) {
                        try {
                            int accion = jFileChooser.showOpenDialog(this);
                            if (accion == JFileChooser.APPROVE_OPTION) {
                                File file = jFileChooser.getSelectedFile();
                                importar = new ClaseImportar();
                                importar.metodoImportar(file);
                                ClaseMensaje.informacion("Resumen de Importe:"
                                        + "\n\nCuentas correctas: " + importar.correctosCuentas
                                        + "\nErrores: " + importar.erroresCuentas
                                        + "\nSoportes de Cuentas Correctas: " + importar.correctosSoportescuentas
                                        + "\nErrores: " + importar.erroresSoportescuentas);
                            } else {
                            }
                        } catch (Exception ex) {
                            Logger.getLogger(PanelAnexoscontratos.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                } else if (padreDos.equals("Gastos Facultad *")
                        && hijo.equals("Pend. Calificacion")
                        && ClaseGeneral.perfil.equals("root")) {
                    try {
                        //TODO
                    } catch (Exception ex) {
                        Logger.getLogger(PanelAnexoscontratos.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jTreeMouseClicked

    private void botonPantallazoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonPantallazoActionPerformed
        try {
            PrinterJob job = PrinterJob.getPrinterJob();

            PageFormat page = job.defaultPage();
            page.setOrientation(PageFormat.LANDSCAPE);

            job.setPrintable(this, page);
            job.printDialog();
            job.print();
        } catch (PrinterException ex) {
            Logger.getLogger(FramePrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_botonPantallazoActionPerformed

    private void labelEntidadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelEntidadMouseClicked
        try {
            if (labelEntidad.getText().contains("Solicitud de Oferta:")
                    && ClaseGeneral.solicitudesoferta.getId() != null) {
                solicitudesoferta.setBounds(0, 0, jDesktopPane.getWidth(), jDesktopPane.getHeight());
                solicitudesoferta.setVisible(true);
                ClaseGeneral.parametro = "CAST(ID AS TEXT)";
                ClaseGeneral.valor = "" + ClaseGeneral.solicitudesoferta.getId();
                solicitudesoferta.metodoBuscar(ClaseGeneral.solicitudesoferta.getAno());
            } else if (labelEntidad.getText().contains("Contrato:")
                    && ClaseGeneral.contratos.getContrato() != null) {
                contratos.setBounds(0, 0, jDesktopPane.getWidth(), jDesktopPane.getHeight());
                contratos.setVisible(true);
                ClaseGeneral.parametro = "CONTRATO";
                ClaseGeneral.valor = ClaseGeneral.contratos.getContrato();
                contratos.metodoBuscar("");
            } else if (labelEntidad.getText().contains("Tercero:")
                    && ClaseGeneral.terceros.getId() != null) {
                terceros.setBounds(0, 0, jDesktopPane.getWidth(), jDesktopPane.getHeight());
                terceros.setVisible(true);
                ClaseGeneral.parametro = "ID";
                ClaseGeneral.valor = ClaseGeneral.terceros.getId();
                terceros.metodoBuscar();
            } else if (labelEntidad.getText().contains("Resolucion:")
                    && ClaseGeneral.resoluciones.getResolucionPK().getId() > 0) {
                resoluciones.setBounds(0, 0, jDesktopPane.getWidth(), jDesktopPane.getHeight());
                resoluciones.setVisible(true);
                ClaseGeneral.parametro = "CAST(ID AS TEXT)";
                ClaseGeneral.valor = "" + ClaseGeneral.resoluciones.getResolucionPK().getId();
                resoluciones.metodoBuscar(ClaseGeneral.resoluciones.getResolucionPK().getAno());
            } else if (labelEntidad.getText().contains("Comprobante:")
                    && ClaseGeneral.comprobantes.getId() > 0) {
                comprobantes.setBounds(0, 0, jDesktopPane.getWidth(), jDesktopPane.getHeight());
                comprobantes.setVisible(true);
                ClaseGeneral.parametro = "CAST(ID AS TEXT)";
                ClaseGeneral.valor = "" + ClaseGeneral.comprobantes.getId();
                comprobantes.metodoBuscar(ClaseGeneral.comprobantes.getAno());
            } else if (labelEntidad.getText().contains("Soporte:")
                    && ClaseGeneral.cuentas.getDocumento() != null) {
                cuentas.setBounds(0, 0, jDesktopPane.getWidth(), jDesktopPane.getHeight());
                cuentas.setVisible(true);
                ClaseGeneral.parametro = "SOPORTE";
                ClaseGeneral.valor = ClaseGeneral.cuentas.getSoporte();
                cuentas.metodoBuscar();
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_labelEntidadMouseClicked

    private void listaCuentasValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaCuentasValueChanged
        if (evt.getValueIsAdjusting()) {
            return;
        }
        JList laLista = (JList) evt.getSource();
        if (laLista.isSelectionEmpty()) {
            return;
        } else {
            metodoLimpiar();

            String sCuentas = "" + laLista.getSelectedValue();

            cuentas.setBounds(0, 0, jDesktopPane.getWidth(), jDesktopPane.getHeight());
            cuentas.setVisible(true);
            ClaseGeneral.parametro = "SOPORTE";
            ClaseGeneral.valor = sCuentas.substring(sCuentas.indexOf(" - ") + 3, sCuentas.indexOf("</p>"));
            cuentas.metodoBuscar();
        }
    }//GEN-LAST:event_listaCuentasValueChanged

    private void listaContratosValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaContratosValueChanged
        if (evt.getValueIsAdjusting()) {
            return;
        }
        JList laLista = (JList) evt.getSource();
        if (laLista.isSelectionEmpty()) {
            return;
        } else {
            metodoLimpiar();

            String sContrato = "" + laLista.getSelectedValue();
            contratos.setBounds(0, 0, jDesktopPane.getWidth(), jDesktopPane.getHeight());
            contratos.setVisible(true);
            ClaseGeneral.parametro = "CONTRATO";
            ClaseGeneral.valor = sContrato.substring(sContrato.indexOf(" - ") + 3, sContrato.indexOf("</p>"));
            contratos.metodoBuscar("");
        }
    }//GEN-LAST:event_listaContratosValueChanged

    private void listaContratosSECOPValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaContratosSECOPValueChanged
        if (evt.getValueIsAdjusting()) {
            return;
        }
        JList laLista = (JList) evt.getSource();
        if (laLista.isSelectionEmpty()) {
            return;
        } else {
            metodoLimpiar();

            String sContrato = "" + laLista.getSelectedValue();
            contratos.setBounds(0, 0, jDesktopPane.getWidth(), jDesktopPane.getHeight());
            contratos.setVisible(true);
            ClaseGeneral.parametro = "CONTRATO";
            ClaseGeneral.valor = sContrato.substring(sContrato.indexOf(" - ") + 3, sContrato.indexOf("</p>"));
            contratos.metodoBuscar("SECOP");
        }
    }//GEN-LAST:event_listaContratosSECOPValueChanged

    private void listaCalificaciontramitesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaCalificaciontramitesValueChanged
        if (evt.getValueIsAdjusting()) {
            return;
        }
        JList laLista = (JList) evt.getSource();
        if (laLista.isSelectionEmpty()) {
            return;
        } else {
            metodoLimpiar();

            String sCuentas = "" + laLista.getSelectedValue();

            cuentas.setBounds(0, 0, jDesktopPane.getWidth(), jDesktopPane.getHeight());
            cuentas.setVisible(true);
            ClaseGeneral.parametro = "SOPORTE";
            ClaseGeneral.valor = sCuentas.substring(sCuentas.indexOf(" - ") + 3, sCuentas.indexOf("</p>"));
            cuentas.metodoBuscar();
            cuentas.botonCalificacionTramites();
        }
    }//GEN-LAST:event_listaCalificaciontramitesValueChanged

    public void metodoIniciar(int i) {
        switch (i) {
            case 1:
                anexoscontratos = new IFrameAnexoscontratos();
                System.out.println("*** IFrameAnexoscontratos()");
                break;
            case 2:
                anexosterceros = new IFrameAnexosterceros();
                System.out.println("*** IFrameAnexosterceros()");
                break;
            case 3:
                bienessolicitudesoferta = new IFrameBienessolicitudesoferta();
                System.out.println("*** IFrameBienessolicitudesoferta()");
                break;
            case 4:
                comprobantes = new IFrameComprobantes();
                System.out.println("*** IFrameComprobantes()");
                break;
            case 5:
                comprobantesnoreembolsados = new IFrameComprobantesnoreembolsados();
                System.out.println("*** IFrameComprobantesnoreembolsados()");
                break;
            case 6:
                comprobantespendientes = new IFrameComprobantespendientes();
                System.out.println("*** IFrameComprobantespendientes()");
                break;
            case 7:
                contratos = new IFrameContratos();
                System.out.println("*** IFrameContratos()");
                break;
            case 8:
                cubs = new IFrameCubs();
                System.out.println("*** IFrameCubs()");
                break;
            case 9:
                cuentas = new IFrameCuentas();
                System.out.println("*** IFrameCuentas()");
                break;
            case 10:
                cumplidoscomprobantes = new IFrameCumplidoscomprobantes();
                System.out.println("*** IFrameCumplidoscomprobantes()");
                break;
            case 11:
                facturascomprobantes = new IFrameFacturascomprobantes();
                System.out.println("*** IFrameFacturascomprobantes()");
                break;
            case 12:
                formadepagocontratos = new IFrameFormadepagocontratos();
                System.out.println("*** IFrameFormadepagocontratos()");
                break;
            case 13:
                formadepagosolicitudesoferta = new IFrameFormadepagosolicitudesoferta();
                System.out.println("*** IFrameFormadepagosolicitudesoferta()");
                break;
            case 14:
                modificaciones = new IFrameModificaciones();
                System.out.println("*** IFrameModificaciones()");
                break;
            case 15:
                observacionescontratos = new IFrameObservacionescontratos();
                System.out.println("*** IFrameObservacionescontratos()");
                break;
            case 16:
                observacionescuentas = new IFrameObservacionescuentas();
                System.out.println("*** IFrameObservacionescuentas()");
                break;
            case 17:
                polizas = new IFramePolizas();
                System.out.println("*** IFramePolizas()");
                break;
            case 18:
                reportes = new IFrameReportes();
                System.out.println("*** IFrameInformes()");
                break;
            case 19:
                resoluciones = new IFrameResoluciones();
                System.out.println("*** IFrameResolucion()");
                break;
            case 20:
                serviciossolicitudesoferta = new IFrameServiciossolicitudesoferta();
                System.out.println("*** IFrameServiciossolicitudesoferta()");
                break;
            case 21:
                solicitudesoferta = new IFrameSolicitudesoferta();
                System.out.println("*** IFrameSolicitudesoferta()");
                break;
            case 22:
                soportescomprobantes = new IFrameSoportescomprobantes();
                System.out.println("*** IFrameSoportescomprobantes()");
                break;
            case 23:
                soportescontratos = new IFrameSoportescontratos();
                System.out.println("*** IFrameSoportescontratos()");
                break;
            case 24:
                soportescuentas = new IFrameSoportescuentas();
                System.out.println("*** IFrameSoportescuentas()");
                break;
            case 25:
                terceros = new IFrameTerceros();
                System.out.println("*** IFrameTerceros()");
                break;
            case 26:
                tercerosresoluciones = new IFrameTercerosresoluciones();
                System.out.println("*** IFrameTercerosresoluciones()");
                break;
            case 27:
                planestrategicocontratos = new IFramePlanestrategicocontratos();
                System.out.println("*** IFramePlaestrategicocontratos()");
                break;   
        }
    }

    public void metodoLimpiar() {
        anexoscontratos.setVisible(false);
        anexosterceros.setVisible(false);
        bienessolicitudesoferta.setVisible(false);
        comprobantes.setVisible(false);
        comprobantesnoreembolsados.setVisible(false);
        comprobantespendientes.setVisible(false);
        contratos.setVisible(false);
        cubs.setVisible(false);
        cuentas.setVisible(false);
        cumplidoscomprobantes.setVisible(false);
        facturascomprobantes.setVisible(false);
        formadepagocontratos.setVisible(false);
        formadepagosolicitudesoferta.setVisible(false);
        modificaciones.setVisible(false);
        observacionescontratos.setVisible(false);
        observacionescuentas.setVisible(false);
        planestrategicocontratos.setVisible(false);
        polizas.setVisible(false);
        reportes.setVisible(false);
        resoluciones.setVisible(false);
        serviciossolicitudesoferta.setVisible(false);
        solicitudesoferta.setVisible(false);
        soportescomprobantes.setVisible(false);
        soportescontratos.setVisible(false);
        soportescuentas.setVisible(false);
        terceros.setVisible(false);
        tercerosresoluciones.setVisible(false);

        jPanelSur.setVisible(false);
    }

    public static void metodoEntidadSeleccionada(String padre, String hijo) {
        try {
            if (padre.equals("Solicitud de Oferta")
                    && (hijo.equals("Solicitudes *")
                    || hijo.equals("Bienes")
                    || hijo.equals("Forma de Pago")
                    ||hijo.equals("Servicios"))
                    && ClaseGeneral.solicitudesoferta.getId() != null) {
                if (ClaseGeneral.solicitudesoferta.getId().length() > 18) {//0090.0090_0001.0001
                    labelEntidad.setText("<html><p>"
                            + "<font color=\"#0E4986\"> Solicitud de Oferta: </font><br/>   <font size=\"-2\">" + ClaseGeneral.solicitudesoferta.getId() + "</font></p></html>");
                } else {
                    labelEntidad.setText("<html><p>"
                            + "<font color=\"#0E4986\"> Solicitud de Oferta: </font><br/>   " + ClaseGeneral.solicitudesoferta.getId()+ "</p></html>");
                }
                jPanelSur.setVisible(true);
            } else if (padre.equals("Orden Contractual")
                    && (hijo.equals("Contratos *")
                    || hijo.equals("Modificaciones")
                    || hijo.equals("Plan Estrategico")
                    || hijo.equals("Pólizas")
                    || hijo.equals("Soportes")
                    || hijo.equals("Anexos")
                    || hijo.equals("Observaciones")
                    || hijo.equals("CUBS")
                    || hijo.equals("Forma de Pago"))
                    && ClaseGeneral.contratos.getContrato() != null) {
                if (ClaseGeneral.contratos.getContrato().length() > 18) {//0090.0090_0001.0001
                    labelEntidad.setText("<html><p>"
                            + "<font color=\"#0E4986\"> Contrato: </font><br/>   <font size=\"-2\">" + ClaseGeneral.contratos.getContrato() + "</font></p></html>");
                } else {
                    labelEntidad.setText("<html><p>"
                            + "<font color=\"#0E4986\"> Contrato: </font><br/>   " + ClaseGeneral.contratos.getContrato() + "</p></html>");
                }
                jPanelSur.setVisible(true);
            } else if (padre.equals("Beneficiarios")
                    && (hijo.equals("Terceros *")
                    || hijo.equals("Anexos"))
                    && ClaseGeneral.terceros.getId() != null) {
                labelEntidad.setText("<html><p>"
                        + "<font color=\"#0E4986\"> Tercero: </font><br/>   " + ClaseGeneral.terceros.getId() + "</p></html>");
                jPanelSur.setVisible(true);
            } else if (padre.equals("Pagos Facultad")
                    && (hijo.equals("Comprobantes *")
                    || hijo.equals("Cumplidos")
                    || hijo.equals("Facturas")
                    || hijo.equals("Soportes"))
                    && ClaseGeneral.comprobantes.getId() > 0) {
                labelEntidad.setText("<html><p>"
                        + "<font color=\"#0E4986\"> Comprobante: </font><br/>   " + ClaseGeneral.comprobantes.getId() + "</p></html>");
                jPanelSur.setVisible(true);
            } else if (padre.equals("Resoluciones")
                    && (hijo.equals("Articulos")
                    || hijo.equals("Resolucion *"))
                    && ClaseGeneral.resoluciones.getResolucionPK().getId() > 0) {
                labelEntidad.setText("<html><p>"
                        + "<font color=\"#0E4986\"> Resolucion: </font><br/>   " + ClaseGeneral.resoluciones.getResolucionPK().getId() + "</p></html>");
                jPanelSur.setVisible(true);
            } else if (padre.equals("Gastos Facultad")
                    && (hijo.equals("Cuentas *")
                    || hijo.equals("Soportes")
                    || hijo.equals("Observaciones"))
                    && ClaseGeneral.cuentas.getDocumento() != null) {
                labelEntidad.setText("<html><p>"
                        + "<font color=\"#0E4986\"> Soporte: </font><br/>   " + ClaseGeneral.cuentas.getSoporte() + "</p></html>");
                jPanelSur.setVisible(true);

            } else {
                labelEntidad.setText("");
                jPanelSur.setVisible(false);
            }
        } catch (Exception e) {
            labelEntidad.setText("");
            jPanelSur.setVisible(false);
        }
    }

    public void metodoHiloAutomatico() {
        hiloAutomatico = new ThreadAutomatico();
        hiloAutomatico.start();
    }

    @Override
    public int print(Graphics graphics, PageFormat pageFormat, int pageIndex) throws PrinterException {
        if (pageIndex > 0) {
            return NO_SUCH_PAGE;
        }

        Graphics2D g2 = (Graphics2D) graphics;
        g2.translate(pageFormat.getImageableX(), pageFormat.getImageableY());

        Dimension size = jDesktopPane.getSize();
        double pageWidth = pageFormat.getImageableWidth();
        double pageHeight = pageFormat.getImageableHeight();

        if (size.width > pageWidth) {
            double factor = pageWidth / size.width;
            g2.scale(factor, factor);
            pageWidth /= factor;
            pageHeight /= factor;
        }
        if (size.height > pageHeight) {
            double factor = pageHeight / size.height;
            g2.scale(factor, factor);
            pageWidth /= factor;
            pageHeight /= factor;
        }

        g2.translate((pageWidth - size.width) / 2, (pageHeight - size.height) / 2);
        g2.drawRect(-1, -1, size.width + 2, size.height + 2);
        g2.drawString("PANTALLA", 0, -15);
        g2.setClip(0, 0, size.width, size.height);

        jDesktopPane.paint(graphics);

        return PAGE_EXISTS;
    }

    class ThreadCarga extends Thread {

        @Override
        public void run() {
            int min = 1;
            int max = 27;//**// a

            FrameInicio.jProgressBar.setValue(min);
            FrameInicio.jProgressBar.setMinimum(min);
            FrameInicio.jProgressBar.setMaximum(max);

            for (int i = min; i <= max; i++) {
                FrameInicio.jProgressBar.setValue(i);
                metodoIniciar(i);
                synchronized (objeto) {
                    try {
                        objeto.wait(500);
                    } catch (InterruptedException e) {
                    }
                }
            }
            hilo1 = null;
            initComponents();

            isCargado = true;
            FrameInicio.jProgressBar.setValue(0);
            metodoHiloAutomatico();
        }
    }

    class ThreadCargaEntregapdf extends Thread {

        @Override
        public void run() {
            frameCarga.jProgressBar.setIndeterminate(true);
            frameCarga.jProgressBar.setMinimum(1);
            frameCarga.jProgressBar.setMaximum(100);
            /**
             *
             */
            try {
                Map<String, String> parametros = new HashMap<String, String>();
                parametros.put("FECHA", ClaseInformacion.ConvertirFecha(FramePrincipal.panelEntrega.fecha.getDate()));

                informes.formatoEntrega(parametros);
            } catch (Exception e) {
                ClaseMensaje.error("Error al mostrar el archivo.\n" + e);
            }
            /**
             *
             */
            frameCarga.jProgressBar.setIndeterminate(false);
            frameCarga.dispose();
            hilo2 = null;
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonPantallazo;
    private javax.swing.JDesktopPane jDesktopPane;
    private javax.swing.JFileChooser jFileChooser;
    private javax.swing.JPanel jPanel;
    public static javax.swing.JPanel jPanelPrimero;
    public static javax.swing.JPanel jPanelSur;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTree jTree;
    public static javax.swing.JLabel labelEntidad;
    private javax.swing.JLabel labelImagen;
    public static javax.swing.JList listaCalificaciontramites;
    public static javax.swing.JList listaContratos;
    public static javax.swing.JList listaContratosSECOP;
    public static javax.swing.JList listaCuentas;
    private javax.swing.JScrollPane scrollListaCalificaciontramites;
    private javax.swing.JScrollPane scrollListaContratos;
    private javax.swing.JScrollPane scrollListaContratosSECOP;
    private javax.swing.JScrollPane scrollListaCuentas;
    // End of variables declaration//GEN-END:variables
}
